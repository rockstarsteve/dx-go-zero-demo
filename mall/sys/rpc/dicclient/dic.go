// Code generated by goctl. DO NOT EDIT!
// Source: dic.proto

package dicclient

import (
	"context"

	dic "go-zero-demo/mall/sys/rpc/dic"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	DicResponse = dic.DicResponse
	IdRequest   = dic.IdRequest

	Dic interface {
		GetDicById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*DicResponse, error)
	}

	defaultDic struct {
		cli zrpc.Client
	}
)

func NewDic(cli zrpc.Client) Dic {
	return &defaultDic{
		cli: cli,
	}
}

func (m *defaultDic) GetDicById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*DicResponse, error) {
	client := dic.NewDicClient(m.cli.Conn())
	return client.GetDicById(ctx, in, opts...)
}
