// Code generated by goctl. DO NOT EDIT!
// Source: user.proto

package userclient

import (
	"context"

	user "go-zero-demo/mall/user/rpc/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	IdRequest    = user.IdRequest
	SaveReq      = user.SaveReq
	SaveResp     = user.SaveResp
	UserResponse = user.UserResponse

	User interface {
		GetUser(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*UserResponse, error)
		SaveUser(ctx context.Context, in *SaveReq, opts ...grpc.CallOption) (*SaveResp, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) GetUser(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*UserResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetUser(ctx, in, opts...)
}

func (m *defaultUser) SaveUser(ctx context.Context, in *SaveReq, opts ...grpc.CallOption) (*SaveResp, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.SaveUser(ctx, in, opts...)
}
